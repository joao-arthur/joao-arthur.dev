import{t as n,a as o,b as l}from"./BPHt8eje.js";import"./Devn5Tq6.js";import{A as X,B as a,C as d,D as g,F as r}from"./lc7zKNTw.js";import{h as q}from"./amNWgKlN.js";import{l as re,s as oe}from"./Dq5CK-DW.js";import{P as ae,H as se,a as i,b as p}from"./BhtUnja0.js";import{T as ne,a as ie}from"./B2s41F8v.js";import{H as le,L as h}from"./S4V8Aox4.js";const G={title:"UNIX-Like And Packages",description:"Why sometimes everything seems messy on Linux? why the whole free software community still uses C?",created_at:"2024-06-30",updated_at:"2025-02-20",technologies:["Linux","C"]},{title:Be,description:He,created_at:Oe,updated_at:We,technologies:je}=G;var de=n(`Generalizing, when someone begins on Linux, it happens with a famous distribution. After install, it
is possible to install the programs using terminal commands. Usually, these commands are just <strong>CLIs</strong> that behave as <strong>frontend</strong> for the <strong>package managers</strong>.`,1),ge=n("<tr><th>distro</th><th>frontend</th><th>backend</th></tr>"),pe=n("<!> <tbody><tr><td>debian</td><td>apt</td><td>dpkg</td></tr><tr><td>arch</td><td>pacman</td><td>pacman</td></tr><tr><td>fedora</td><td>yum</td><td>rpm</td></tr><tr><td>fedora</td><td>dnf</td><td>rpm</td></tr><tr><td>gentoo</td><td>emerge</td><td>portage</td></tr></tbody>",1),he=n("Most common <strong>terminal commands</strong> and <strong>package managers</strong> in Linux world",1),me=n(`One of the <strong>free software</strong> principles is the <em>freedom of choise</em>. When it comes to package
managers, each distro uses a specific one.`,1),ce=n(`The basic programs of every operational system are all written in <strong>C</strong>. This is not just the reflex
of a 50 years legaly, but also something intentional, because a unique feature of this programming
language: <strong>dynamic linking</strong>. This features allow to compile a program that depends on many
libraries without having them avaliable at compile time, just with the <strong>headers</strong> files.`,1),ve=n(`Imagine for example that in your Linux, 50 programs use a cryptography library called <strong>libre_crypto</strong>. When running the software update through the package manager, this lib gets
updated from version <strong>2.11</strong> up to <strong>2.12</strong>. All the 50 programs will use this updated lib, with
the bonus of the fixed bugs and the onus of possible new bugs.`,1),ue=n(`In practice, it is a bit more complicated, since every package manager has a different strategy of
packaging to minimize breaking changes with updates. For deepening, I recommend the reading of the
excelent article <a href="https://dmerej.info/blog/post/symlinks-and-so-files-on-linux/" rel="nofollow">symlinks and .so files on linux - what you need to know</a>.`,1),_e=n("It is possible to compare this behavior with <strong>NodeJS</strong>. Imagine the following import:",1),fe=n("When the program gets executed, <strong>NodeJS</strong> will lookup for the directory <strong>node_modules/react</strong>.",1),$e=n("Similar way, when a <strong>C</strong> program makes the following include:",1),ye=n("When the program gets executed, the <strong>Operational System</strong> will lookup for the file <strong>/usr/lib/libSDL2.so</strong>.",1),be=n(`Letâ€™s briefly return to the <em>beginning of History, january 1st 1970</em>. A new Operational System was
being created at Bell Labs, the <strong>UNIX</strong>. In short period of time, this system becamed used in
universities all along the United States and soon people started creating their own <strong>UNIX</strong>, with
many distributions created. As a result, currently, the main open source <strong>UNIX-like</strong> Operational
Systems are:`,1),ke=n(`All these systems have <strong>more or less</strong> the same <strong>APIs</strong> avalialble for any program. What means
that, any program written thinking on <strong>GNU/Linux</strong> can be ported to <strong>OpenBSD</strong> or to <strong>FreeBSD</strong>,
or vice-versa.`,1),we=n("This implies that it is possible to run <strong>ZSH</strong>, <strong>fastfetch</strong>, and even <strong>gnome</strong> both on <strong>GNU/Linux</strong> and <strong>OpenBSD</strong>, and these are <em>real examples I found on the Internet</em>.",1),xe=n('<!> <!> <!> <!> <!> <blockquote><!></blockquote> <!> <!> <!> <!> <!> <!> <!> <pre class="language-js"><!></pre> <!> <!> <pre class="language-c"><!></pre> <!> <!> <!> <ul><!> <!> <!> <!></ul> <!> <!> <!> <!>',1);function Fe(z,J){const M=re(J,["children","$$slots","$$events","$$legacy"]);ae(z,oe(()=>M,G,{children:(R,Pe)=>{var _=xe(),f=X(_);se(f,{children:(t,s)=>{r();var e=l("UNIX-Like And Packages");o(t,e)}});var $=a(f,2);i($,{children:(t,s)=>{r();var e=l("Why sometimes everything seems messy on Linux? Why the whole Free Software community still uses C?");o(t,e)}});var y=a($,2);p(y,{children:(t,s)=>{r();var e=l("Linux Packages");o(t,e)}});var b=a(y,2);i(b,{children:(t,s)=>{r();var e=de();r(6),o(t,e)}});var k=a(b,2);ne(k,{children:(t,s)=>{var e=pe(),Y=X(e);ie(Y,{children:(ee,Le)=>{var te=ge();o(ee,te)}}),r(2),o(t,e)}});var m=a(k,2),Z=d(m);i(Z,{children:(t,s)=>{r();var e=he();r(4),o(t,e)}}),g(m);var w=a(m,2);i(w,{children:(t,s)=>{r();var e=me();r(4),o(t,e)}});var x=a(w,2);p(x,{children:(t,s)=>{r();var e=l("C, The Lingua Franca");o(t,e)}});var P=a(x,2);i(P,{children:(t,s)=>{r();var e=ce();r(6),o(t,e)}});var L=a(P,2);i(L,{children:(t,s)=>{r();var e=ve();r(6),o(t,e)}});var S=a(L,2);i(S,{children:(t,s)=>{r();var e=ue();r(2),o(t,e)}});var I=a(S,2);le(I,{children:(t,s)=>{r();var e=l("Analogy");o(t,e)}});var U=a(I,2);i(U,{children:(t,s)=>{r();var e=_e();r(2),o(t,e)}});var c=a(U,2),E=d(c);q(E,()=>'<code class="language-js"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span></code>'),g(c);var A=a(c,2);i(A,{children:(t,s)=>{r();var e=fe();r(4),o(t,e)}});var N=a(A,2);i(N,{children:(t,s)=>{r();var e=$e();r(2),o(t,e)}});var v=a(N,2),K=d(v);q(K,()=>'<code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;SDL2/SDL.h></span></span></code>'),g(v);var T=a(v,2);i(T,{children:(t,s)=>{r();var e=ye();r(4),o(t,e)}});var C=a(T,2);p(C,{children:(t,s)=>{r();var e=l("The Father Of All");o(t,e)}});var D=a(C,2);i(D,{children:(t,s)=>{r();var e=be();r(8),o(t,e)}});var u=a(D,2),B=d(u);h(B,{children:(t,s)=>{r();var e=l("GNU/Linux");o(t,e)}});var H=a(B,2);h(H,{children:(t,s)=>{r();var e=l("OpenBSD");o(t,e)}});var O=a(H,2);h(O,{children:(t,s)=>{r();var e=l("FreeBSD");o(t,e)}});var Q=a(O,2);h(Q,{children:(t,s)=>{r();var e=l("Minix");o(t,e)}}),g(u);var W=a(u,2);i(W,{children:(t,s)=>{r();var e=ke();r(10),o(t,e)}});var j=a(W,2);i(j,{children:(t,s)=>{r();var e=we();r(12),o(t,e)}});var F=a(j,2);p(F,{children:(t,s)=>{r();var e=l("Conclusion");o(t,e)}});var V=a(F,2);i(V,{children:(t,s)=>{r();var e=l(`The freedom of free software sometimes can lead to compatibility problems and bugs. But it is
important to understand the challenges and advatanges of keeping a portability of programs between
UNIX-like systems.`);o(t,e)}}),o(R,_)},$$slots:{default:!0}}))}export{Fe as default,G as metadata};
