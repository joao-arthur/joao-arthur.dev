import{t as i,a as o,b as n}from"./BPHt8eje.js";import"./Devn5Tq6.js";import{A as z,B as s,C as d,D as c,F as t}from"./lc7zKNTw.js";import{l as C,s as M}from"./Dq5CK-DW.js";import{P as U,H as q,a as u,b as g}from"./BhtUnja0.js";import{H as v}from"./CHCmSIW9.js";import{L as l}from"./vCgyL3Yv.js";const H={title:"precise_schedule",description:"FLOSS Web Schedule Application",license:"GNU AGPLv3",repository:"https://github.com/joao-arthur/precise_schedule",created_at:"2023-08-11",updated_at:"2025-02-12",programming_languages:["TypeScript"],technologies:["NextJS"],img_url:"/images/precise_schedule.png",app_url:"/app/precise_schedule/index.html"},{title:le,description:ie,license:de,repository:ce,created_at:pe,updated_at:he,programming_languages:_e,technologies:ue,img_url:ge,app_url:ve}=H;var E=i("Finished most of the frontend using <strong>React</strong>",1),K=i("Made the backend using <strong>NestJS</strong>",1),Q=i("Finished the frontend using <strong>NextJS</strong>, and made it work standalone from the backend",1),V=i("Applyed <strong>DDD</strong> to create a new backend in <strong>Deno</strong> from the scratch",1),X=i(`I rewrote the <strong>Deno</strong> backend using the structured paradigm and the <strong>Result</strong> data structure
inspired on <strong>Rust</strong>`,1),Y=i("<!> <!> <!> <!> <!> <!> <ul><!> <!></ul> <!> <ul><!> <!></ul> <!> <ul><!></ul> <!> <!> <ul><!> <!> <!></ul>",1);function $e(J,N){const R=C(N,["children","$$slots","$$events","$$legacy"]);U(J,M(()=>R,H,{children:(O,Z)=>{var $=Y(),m=z($);q(m,{children:(e,a)=>{t();var r=n("precise_schedule");o(e,r)}});var P=s(m,2);u(P,{children:(e,a)=>{t();var r=n("FLOSS Web Schedule Application");o(e,r)}});var f=s(P,2);g(f,{children:(e,a)=>{t();var r=n("The Original Project");o(e,r)}});var x=s(f,2);u(x,{children:(e,a)=>{t();var r=n(`In 2018, I developed a Java schedule application named PreciseSchedule. Back then, I lacked
knowledge about clean code, clean architecture, data structures, and testing. Shortly after
completing the application, I had the urge to rewrite it, applying the knowledge gained.`);o(e,r)}});var b=s(x,2);g(b,{children:(e,a)=>{t();var r=n("The Rewritings");o(e,r)}});var S=s(b,2);v(S,{children:(e,a)=>{t();var r=n("2021");o(e,r)}});var p=s(S,2),y=d(p);l(y,{children:(e,a)=>{t();var r=E();t(),o(e,r)}});var j=s(y,2);l(j,{children:(e,a)=>{t();var r=K();t(),o(e,r)}}),c(p);var k=s(p,2);v(k,{children:(e,a)=>{t();var r=n("2023");o(e,r)}});var h=s(k,2),T=d(h);l(T,{children:(e,a)=>{t();var r=Q();t(2),o(e,r)}});var B=s(T,2);l(B,{children:(e,a)=>{t();var r=V();t(4),o(e,r)}}),c(h);var w=s(h,2);v(w,{children:(e,a)=>{t();var r=n("2024");o(e,r)}});var _=s(w,2),G=d(_);l(G,{children:(e,a)=>{t();var r=X();t(5),o(e,r)}}),c(_);var L=s(_,2);g(L,{children:(e,a)=>{t();var r=n("The Lessons");o(e,r)}});var D=s(L,2);u(D,{children:(e,a)=>{t();var r=n("Through the process, I learned:");o(e,r)}});var I=s(D,2),A=d(I);l(A,{children:(e,a)=>{t();var r=n("To shrink the features to their essentials");o(e,r)}});var F=s(A,2);l(F,{children:(e,a)=>{t();var r=n("To start development by core functionality");o(e,r)}});var W=s(F,2);l(W,{children:(e,a)=>{t();var r=n("That the architecture is more important than the code");o(e,r)}}),c(I),o(O,$)},$$slots:{default:!0}}))}export{$e as default,H as metadata};
