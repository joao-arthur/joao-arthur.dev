import{t as i,b as n}from"./BAQlJMdJ.js";import"./jhujCLip.js";import{n as s}from"./l2PV5vIv.js";const o={title:"precise_schedule",description:"FLOSS Web Schedule Application",license:"GNU AGPLv3",repository:"https://github.com/joao-arthur/precise_schedule",created_at:"2023-08-11",updated_at:"2025-02-12",languages:["TypeScript"],technologies:["NextJS"],img_url:"/images/precise_schedule.png",app_url:"/app/precise_schedule/index.html"},{title:c,description:p,license:u,repository:h,created_at:g,updated_at:m,languages:f,technologies:b,img_url:_,app_url:v}=o;var r=i(`<h1 id="precise-schedule"><a aria-hidden="true" tabindex="-1" href="#precise-schedule"><span class="icon icon-link"></span></a>Precise Schedule</h1> <h2 id="o-projeto-original"><a aria-hidden="true" tabindex="-1" href="#o-projeto-original"><span class="icon icon-link"></span></a>O Projeto Original</h2> <p>Em 2018, eu desenvolvi uma aplicação de agenda em Java chamada PreciseSchedule. Naquela época, eu
não tinha conhecimento sobre código limpo, arquitetura limpa, estruturas de dados e testes. Pouco
tempo depois de completar a aplicação, eu senti a necessidade de reescrever ela, aplicando o
conhecimento que eu ganhei.</p> <h2 id="as-reescritas"><a aria-hidden="true" tabindex="-1" href="#as-reescritas"><span class="icon icon-link"></span></a>As Reescritas</h2> <h3 id="2021"><a aria-hidden="true" tabindex="-1" href="#2021"><span class="icon icon-link"></span></a>2021</h3> <ul><li>Terminei a maior parte do frontend usando <strong>React</strong></li> <li>Fiz o backend usando <strong>NestJS</strong></li></ul> <h3 id="2023"><a aria-hidden="true" tabindex="-1" href="#2023"><span class="icon icon-link"></span></a>2023</h3> <ul><li>Portei o frontend para <strong>NextJS</strong> e finalizei ele, fazendo funcionar de forma independente do
backend</li> <li>Apliquei <strong>DDD</strong> para criar um novo backend em <strong>Deno</strong> do zero</li></ul> <h3 id="2024"><a aria-hidden="true" tabindex="-1" href="#2024"><span class="icon icon-link"></span></a>2024</h3> <ul><li>Reescrevi o backend <strong>Deno</strong> aplicando o paradigma estruturado e a estrutura de dados <strong>Result</strong> inspirada no <strong>Rust</strong></li></ul> <h2 id="as-lições"><a aria-hidden="true" tabindex="-1" href="#as-lições"><span class="icon icon-link"></span></a>As Lições</h2> <p>Através do processo eu aprendi:</p> <ul><li>A limitar as funcionalidades ao essencial</li> <li>Começar o desenvolvimento por funcionalidades-chave</li> <li>Que arquitetura é mais importante que o código</li></ul> <h2 id="aplicação-final"><a aria-hidden="true" tabindex="-1" href="#aplicação-final"><span class="icon icon-link"></span></a>Aplicação Final</h2> <p><a href="/app/precise_schedule/index.html">Clique aqui para ver!</a></p>`,1);function x(e){var a=r();s(28),n(e,a)}export{x as default,o as metadata};
