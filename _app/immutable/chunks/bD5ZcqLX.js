import{t as q,a as T}from"./WeQXqaOV.js";import"./DZ-DIwRQ.js";import{A as n,B as S,C as s,D as a,F as H}from"./Bbc5DNbi.js";import{h as t}from"./BUU-BBpD.js";const _={title:"HTML And Components",description:"Why React became so popular? How was the way here?",created_at:"2024-06-31",updated_at:"2025-02-20",technologies:["HTML","React"]},{title:P,description:R,created_at:J,updated_at:j,technologies:E}=_;var C=q(`<h1>HTML And Components</h1> <p>Why React became so popular? How was the way here?</p> <h2>Components</h2> <p>Web projects are made of <strong>HTML</strong>, <strong>CSS</strong> and <strong>JS</strong>, which correspond to layout, style and
behavior.</p> <p>A <strong>component</strong> is a concept that represent the union of these characteristics into a defined piece
of layout: a header, a menu, a badge, an input, and so on.</p> <pre class="language-html"><!></pre> <blockquote><p>A red square “component” in plain <strong>HTML</strong></p></blockquote> <p>In order to possess a component, we need to reuse and to divide <strong>CSS</strong>, <strong>JS</strong> and <strong>HTML</strong> in many
files.</p> <p>It has always been easy to reuse <strong>CSS</strong> and <strong>JS</strong>, however the same was not true for <strong>HTML</strong>,
until recently.</p> <h2>Templates</h2> <p>Web applications serve pages through an <strong>application server</strong>. For each route, they have to return
an <strong>HTML</strong> content, as an <strong>HTTP</strong> response. The <strong>HTML</strong> can link many <strong>CSS</strong> and <strong>JS</strong> files,
but no other <strong>HTML</strong> ones. The solution was to build the <strong>HTML</strong> dinamically on the server.</p> <p>The technique for this was to use <strong>templates</strong>. The concept is to define a special syntax for text
files, in order to replace the original string with binded values in runtime.</p> <pre class="language-html"><!></pre> <blockquote><p><strong>Perl</strong> template in (HTML-Template)[https://metacpan.org/pod/HTML::Template]</p></blockquote> <pre class="language-html"><!></pre> <blockquote><p><strong>PHP</strong> template in (Twig)[https://twig.symfony.com/]</p></blockquote> <pre class="language-html"><!></pre> <blockquote><p><strong>PHP</strong> template in (Plates)[https://platesphp.com]</p></blockquote> <p>Templates solved a problem: Now it was possible to reuse <strong>HTML</strong>, <strong>CSS</strong> and <strong>JS</strong>. But there was
no union between these concepts directly, unless the developer intended to, with project folder or
architectural organization.</p> <h2>JQuery</h2> <p>With the development of <strong>XMLHTTPRequest</strong> and <strong>JQuery Ajax</strong>, it became possible to mount the
skeletons on the server, and then feed them with <strong>HTTP</strong> requests on the client. This was a change
from <strong>SSR (server-side rendering)</strong> to <strong>CSR (client-side rendering)</strong>.</p> <pre class="language-html"><!></pre> <blockquote><p>JQuery HTTP GET, with <strong>DOM</strong> manipulation</p></blockquote> <h2>AngularJS</h2> <p>In 2010, <strong>AngularJS</strong> helped popularize <strong>NodeJS</strong> on frontend applications and brought once and
for all the concept of components, with <strong>OOP</strong> on <strong>JavaScript</strong>.</p> <h2>React</h2> <p>The emergence of <strong>React</strong> in 2014 displaced <strong>AngularJS</strong> because of simplicity. Components are
functions, and page building is to <em>compose components</em>.</p> <pre class="language-js"><!></pre> <blockquote><p>A red square component in React</p></blockquote> <h2>Web Components</h2> <p>Currently, even on <strong>vanilla JavaScript</strong>, it is possible to create custom <strong>HTML</strong> tags, with the <strong>WebComponents API</strong>.</p> <pre class="language-html"><!></pre> <blockquote><p>A red square webcomponent</p></blockquote> <h2>Sailing another seas</h2> <p>The idea of <strong>components</strong> is so powerful that it did not only affected web developmente scenario. A
worth example is the <strong>Android</strong> applications. Android uses natively a <strong>XML</strong> API to define layout,
which is <em>conceptually</em> very close to <strong>HTML</strong>.</p> <pre class="language-xml"><!></pre> <p>In the last years, influenced mainly by <strong>React</strong>, <strong>Kotlin</strong> created a brand new layout API based
on components, and <strong>Flutter</strong> was development with that in mind.</p> <h2>Conclusion</h2> <p>Since the web was born, developers searched was to reuse the code. Componentization showed itself to
be a <em>very effective way</em>, and it ended impacting even other tecnologies, such as mobile apps
development.</p>`,1);function I(g){var i=C(),p=n(S(i),10),d=s(p);t(d,()=>`<code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
            <span class="token selector">.redSquare</span> <span class="token punctuation">&#123;</span>
                <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
                <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
                <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
            <span class="token keyword">function</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token function">alert</span><span class="token punctuation">(</span>
                    <span class="token string">"You clicked the red square!"</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>redSquare<span class="token punctuation">"</span></span>
            <span class="token special-attr"><span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span>
        <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>`),a(p);var o=n(p,14),h=s(o);t(h,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello, my name is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TMPL_VAR</span> <span class="token attr-name">NAME</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>USER</span><span class="token punctuation">></span></span>!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>'),a(o);var e=n(o,4),m=s(e);t(m,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello, my name is &#123;&#123;user&#125;&#125;!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>'),a(e);var c=n(e,4),y=s(c);t(y,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello, my name is <span class="token prolog">&lt;?=$this->e($name)?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>'),a(c);var l=n(c,10),v=s(l);t(v,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>`),a(l);var u=n(l,12),w=s(u);t(w,()=>`<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">RedSquare</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div
            style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>
                <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
                <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
                <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">"red"</span><span class="token punctuation">,</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
        <span class="token operator">/</span><span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),a(u);var r=n(u,8),f=s(r);t(f,()=>`<code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
            <span class="token keyword">class</span> <span class="token class-name">RedSquare</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">&#123;</span>
                <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>

                <span class="token function">connectedCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">const</span> shadow <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span>
                        <span class="token punctuation">&#123;</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">"open"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">const</span> content <span class="token operator">=</span> document
                        <span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">const</span> style <span class="token operator">=</span> document
                        <span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    style<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">
                        div &#123;
                            width: 200px;
                            height: 200px;
                            background-color: red;
                        &#125;
                    </span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>
                    shadow<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    shadow<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>

            customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span>
                <span class="token string">"red-square"</span><span class="token punctuation">,</span>
                RedSquare<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>red-square</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>red-square</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>`),a(r);var k=n(r,8),b=s(k);t(b,()=>`<code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
<span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/redSquare<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#FF0000<span class="token punctuation">"</span></span>
    <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span></code>`),a(k),H(6),T(g,i)}export{I as default,_ as metadata};
