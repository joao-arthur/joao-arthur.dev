import{t as o,a as i}from"./Bv4VJJ99.js";import"./C01Q2Wma.js";import{F as r}from"./B4rLlicd.js";const t={title:"precise_schedule",description:"FLOSS Web Schedule Application",license:"GNU AGPLv3",repository:"https://github.com/joao-arthur/precise_schedule",created_at:"2023-08-11",updated_at:"2025-02-12",programming_languages:["TypeScript"],technologies:["NextJS"],img_url:"/images/precise_schedule.png",app_url:"/app/precise_schedule/index.html"},{title:c,description:p,license:u,repository:m,created_at:g,updated_at:h,programming_languages:_,technologies:f,img_url:v,app_url:S}=t;var s=o(`<h1>precise_schedule</h1> <p>Aplicação FLOSS de uma agenda web</p> <h2>O Projeto Original</h2> <p>Em 2018, eu desenvolvi uma aplicação de agenda em Java chamada PreciseSchedule. Naquela época, eu
não tinha conhecimento sobre código limpo, arquitetura limpa, estruturas de dados e testes. Pouco
tempo depois de completar a aplicação, eu senti a necessidade de reescrever ela, aplicando o
conhecimento que eu ganhei.</p> <h2>As Reescritas</h2> <h3>2021</h3> <ul><li>Terminei a maior parte do frontend usando <strong>React</strong></li> <li>Fiz o backend usando <strong>NestJS</strong></li></ul> <h3>2023</h3> <ul><li>Portei o frontend para <strong>NextJS</strong> e finalizei ele, fazendo funcionar de forma independente do
backend</li> <li>Apliquei <strong>DDD</strong> para criar um novo backend em <strong>Deno</strong> do zero</li></ul> <h3>2024</h3> <ul><li>Reescrevi o backend <strong>Deno</strong> aplicando o paradigma estruturado e a estrutura de dados <strong>Result</strong> inspirada no <strong>Rust</strong></li></ul> <h2>As Lições</h2> <p>Através do processo eu aprendi:</p> <ul><li>A limitar as funcionalidades ao essencial</li> <li>Começar o desenvolvimento por funcionalidades-chave</li> <li>Que arquitetura é mais importante que o código</li></ul>`,1);function b(e){var a=s();r(26),i(e,a)}export{b as default,t as metadata};
